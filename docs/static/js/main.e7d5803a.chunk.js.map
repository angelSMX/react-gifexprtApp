{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","ev","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","Categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAU,IAFE,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAoB9C,OACI,0BAAMC,SAXU,SAAEC,GACnBA,EAAGC,iBAGCJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAOX,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAtBe,SAAEP,GAE3BF,EAAeE,EAAGQ,OAAOF,Y,uBCPhBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,0FAE2EC,UAAWH,GAFtF,sBAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAgBbM,GAhBa,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,yBAAKc,UAAU,2CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,+BAAMA,KCJLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA4BxC,OApBAC,qBAAW,WACHxB,EAASC,GAAWwB,MAAK,SAAAC,GAIjBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAQtB,CAACpB,IAKDqB,EDvByBK,CAAc1B,GAAlCa,EALyB,EAK9BN,KAAaa,EALiB,EAKjBA,QAIpB,OACI,oCACA,wBAAIJ,UAAU,qCAAsChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAGHH,EAAOJ,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEpBfkB,EAAe,WAAK,MAIQ1C,mBAAS,CAAC,cAJlB,mBAIrB2C,EAJqB,KAIT5C,EAJS,KAa7B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAGA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACA2B,IAAQ3B,EACRA,SAAWA,U,MCxBpC8B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e7d5803a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n\n   const[inputValue, setInputValue] = useState ('');\n\n   const handleInputChange = ( ev ) => {\n\n    setInputValue( ev.target.value );\n   \n   }\n\n   const handleSubmit = ( ev ) =>{\n       ev.preventDefault();\n       //console.log('submit hecho');\n\n       if( inputValue.trim().length > 2){\n       setCategories(cats => [ inputValue, ...cats]);\n       setInputValue('');\n       }\n   }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n           \n          <input  \n              type=\"text\"\n              value={ inputValue }\n              onChange={ handleInputChange }\n          /> \n        </form>\n    )\n}\n\n\nAddCategory.propTypes ={\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async(category)=>{\n\n    const url=`https://api.giphy.com/v1/gifs/search?api_key=i37uqwjcXMu5kYBfozcGwFVXtArCO3xR&q=${ encodeURI( category ) }&limit=10`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n\n    })\n\n\n   return gifs;\n\n  \n }","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn \">\n            <img src={ url } alt={ title } />\n            <p> { title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ({ category }) => {\n\n\n \n\n    const {data:images, loading } = useFetchGifs( category );\n\n    \n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n        <div className=\"card-grid\">\n      \n                {\n                    images.map((img) => \n                    <GifGridItem \n                        key={img.id}\n                        {...img}\n                    />\n                    )\n                }\n          \n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n\n    useEffect( () => {\n            getGifs( category ).then(imgs=>{\n                \n                \n                   \n                    setState({\n                        data: imgs,\n                        loading: false \n                    });\n\n                \n                \n                \n            \n            })\n        }, [category])\n\n\n\n\n    return state;\n    \n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\n\nexport const GifExpertApp = () =>{\n \n    //const categories = ['One Punch', 'Samurai X','Dragon Ball'];\n\n    const [ Categories, setCategories] = useState(['One Punch']);\n\n\n    // const handleAdd =() =>{ \n    //     setCategories(['Hola', ...Categories]);\n    //     //setCategories(cats => ['Hola', ...Categories]);\n    \n    // }\n\n    return(\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n            {/* <button onClick={handleAdd}>Agregar</button> */}\n          \n            <ol>\n                {\n                    Categories.map( category =>(\n                         <GifGrid \n                         key = { category } \n                         category={ category } />\n                    ))\n                }\n\n\n            </ol>\n        </>\n\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}